// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SystemMonitor.DataService.Data;

#nullable disable

namespace SystemMonitor.DataService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250119130425_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SystemMonitor.Models.ComputerDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatingDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatingDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ComputerDetails");
                });

            modelBuilder.Entity("SystemMonitor.Models.ComputerMetrics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ComputerDetailsId")
                        .HasColumnType("uuid");

                    b.Property<double>("Cpu")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CreatingDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Disk")
                        .HasColumnType("double precision");

                    b.Property<double>("NetworkUsage")
                        .HasColumnType("double precision");

                    b.Property<double>("Ram")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("UpdatingDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ComputerDetailsId")
                        .IsUnique();

                    b.ToTable("ComputerMetrics");
                });

            modelBuilder.Entity("SystemMonitor.Models.ComputerMetrics", b =>
                {
                    b.HasOne("SystemMonitor.Models.ComputerDetails", "ComputerDetails")
                        .WithOne("Metrics")
                        .HasForeignKey("SystemMonitor.Models.ComputerMetrics", "ComputerDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComputerDetails");
                });

            modelBuilder.Entity("SystemMonitor.Models.ComputerDetails", b =>
                {
                    b.Navigation("Metrics")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
